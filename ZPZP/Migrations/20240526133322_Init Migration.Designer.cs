// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZPZP.Data;

#nullable disable

namespace ZPZP.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240526133322_Init Migration")]
    partial class InitMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ZPZP.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("longtext");

                    b.Property<string>("DescriptionLogistics")
                        .HasColumnType("longtext");

                    b.Property<string>("DescriptionProduction")
                        .HasColumnType("longtext");

                    b.Property<string>("DescriptionQuality")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("LogisticsDocumentation")
                        .HasColumnType("longblob");

                    b.Property<DateTime>("LogisticsWorkerDateAssigned")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LogisticsWorkerDateEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LogisticsWorkerDateStart")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LogisticsWorkersAssigned1")
                        .HasColumnType("longtext");

                    b.Property<string>("LogisticsWorkersAssigned2")
                        .HasColumnType("longtext");

                    b.Property<string>("LogisticsWorkersAssigned3")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ProductionDateEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ProductionDateStart")
                        .HasColumnType("datetime(6)");

                    b.Property<byte[]>("ProductionDocumentation")
                        .HasColumnType("longblob");

                    b.Property<string>("ProductionWorkerAssigned1")
                        .HasColumnType("longtext");

                    b.Property<string>("ProductionWorkerAssigned2")
                        .HasColumnType("longtext");

                    b.Property<string>("ProductionWorkerAssigned3")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ProjectDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ProjectDateStart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("QualityDateAssigned")
                        .HasColumnType("datetime(6)");

                    b.Property<byte[]>("QualityDocumentation")
                        .HasColumnType("longblob");

                    b.Property<string>("QualityWorkerAssigned1")
                        .HasColumnType("longtext");

                    b.Property<string>("QualityWorkerAssigned2")
                        .HasColumnType("longtext");

                    b.Property<string>("QualityWorkerAssigned3")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("QualityWorkerDateEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("QualityWorkerDateStart")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ZPZP.Models.Users", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("Image")
                        .HasColumnType("longblob");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext");

                    b.Property<string>("UserCategory")
                        .HasColumnType("longtext");

                    b.Property<int>("UserDomain")
                        .HasColumnType("int");

                    b.Property<string>("UserLevel")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserPassword")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
